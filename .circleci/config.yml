# #################################
# #           VARIABLES           #
# #################################

restore_cache: &restore_cache
  keys:
    - v1-dependencies-{{ checksum "package.json" }}
    # fallback to using the latest cache if no exact match is found
    - v1-dependencies-

save_cache: &save_cache
  paths:
    - node_modules
  key: v1-dependencies-{{ checksum "package.json" }}

install: &install yarn install

docker: &docker
  - image: circleci/node:8

working_directory: &working-directory ~/repo

add_git_user: &add_git_user
  command: |
      git config --global user.email "marques.developpement@gmail.com"
      git config --global user.name "Marques Kevin"
      git config --global push.default simple


# #################################
# #      CIRCLE CI WORKFLOW       #
# #################################

# version: 2
# jobs:
#   defaults:
#     docker: *docker
#     working_directory: *working-directory
#     steps:
#       - checkout
#       - restore_cache: *restore_cache
#       - run: *install
#       - save_cache: *save_cache
#       - run: *add_git_user
  
#   build:
#     docker: *docker
#     working_directory: *working-directory
#     steps:
#       - checkout
#       - restore_cache: *restore_cache
#       - run: *install
#       - save_cache: *save_cache
#       - run: *add_git_user
#       - run: yarn test:ci
#       - run: yarn coveralls
  

#   release:
#     docker: *docker
#     working_directory: *working-directory
#     steps:
#       - checkout
#       - restore_cache: *restore_cache
#       - run: *install
#       - save_cache: *save_cache
#       - run: *add_git_user
#       - run: yarn test:ci
#       - run: yarn coveralls
#       - run: yarn release
  
# workflows:
#   version: 2
#   build-deploy:
#     jobs:
#       - build:
#           filters:
#             branches:
#               ignores: master
#       - release:
#           filters:
#             branches:
#               only: master

version: 2
jobs:
  build:
    docker: *docker

    working_directory: *working-directory

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test:ci